{"version":3,"sources":["../src/index.ts","../src/model/index.ts","../src/lark/index.ts","../src/oql/index.ts"],"sourcesContent":["import _ from 'lodash';\nimport createModelService from './model';\nimport { createEntry, FnService } from \"byted-apaas-utils\";\nimport exceptions from '@byted-apaas/server-common-node/utils/exceptions';\nimport client from './lark';\nimport oql from './oql';\n\n\n\nexport default {\n  _: {\n    ..._,\n    sleep: (ms: number) => new Promise((resolve) => setTimeout(resolve, ms)),\n  },\n  model: createModelService,\n  createEntry,\n  FnService,\n  lark: client,\n  exceptions,\n  oql\n}\n\n\n","import {FnService, BaseModelService, ObjectApiNames, SelectCond, FilterCond, ResultData} from \"byted-apaas-utils\";\n\nclass ModelService<T extends ObjectApiNames> extends BaseModelService<T> {\n  constructor(model: T) {\n    super({ model });\n  }\n  /**\n   * 查找所有符合条件的记录\n   * @param filter 筛选条件\n   * @param select 需返回的字段\n   * @param sort 排序字段\n   * @param desc 是否降序 默认`false`：升序;`true`：降序\n   * @returns 返回所有符合条件的记录\n   */\n  async find<U extends SelectCond<T>>(\n    {\n      filter = {},\n      select = [],\n      sort = [],\n      desc = false,\n    }: {\n      filter?: FilterCond<T>,\n      select: U[],\n      sort?: U[],\n      desc?: boolean,\n    }\n  ) {\n    const returnData: ResultData<T, U>[] = [];\n\n    return this.findStream({\n      filter,\n      select,\n      sort,\n      desc,\n      handler(records) {\n        returnData.push(...(records as ResultData<T, U>[]));\n      },\n    }).then(() => returnData);\n  }\n}\n\nconst createModelService = <T extends ObjectApiNames>(\n  model: T\n): ModelService<T> => new ModelService<T>(model);\n\nexport default createModelService;\n","import * as lark from '@larksuiteoapi/node-sdk';\n\nlet appId: string | null = null;\nlet appSecret: string | null = null;\n\ntry {\n  // @ts-ignore\n  appId = application.globalVar.getVar('feishuAppId');\n} catch (error) {\n  console.error('Error when getting appId from global variables:', error);\n  // You can also set a default value for appId here.\n  // appId = 'default_appId';\n}\n\ntry {\n  // @ts-ignore\n  appSecret = application.globalVar.getVar('feishuAppSecret');\n} catch (error) {\n  console.error('Error when getting appSecret from global variables:', error);\n  // You can also set a default value for appSecret here.\n  // appSecret = 'default_appSecret';\n}\n\nlet client: any = {};\n\nif (appId && appSecret) {\n  client = new lark.Client({\n    // @ts-ignore\n    appId: appId,\n    // @ts-ignore\n    appSecret: appSecret\n  })\n}\n\n\nexport default client\n","import {Logger} from \"@byted-apaas/server-common-node\";\n\nconst logger = new Logger();\n\nexport default {\n  selectAll: async (query: string) => {\n    if (!query.toUpperCase().includes('ORDER')) {\n      logger.warn('这个 SQL 没有包含 ORDER BY，数据量大的时候可能有问题')\n    }\n    logger.log(query)\n    const pageSize = 200;\n    let page = 1;\n    let result: any[] = []\n\n    while (true) {\n      const offset = (page - 1) * pageSize;\n      const finalQuery = `\n        ${query} \n        LIMIT ${pageSize} OFFSET ${offset}\n      `;\n\n      // @ts-ignore\n      const data = await application.data.oql(finalQuery).execute()\n      if (data.length === 0) {\n        break;\n      }\n      result = result.concat(data);\n      page++;\n    }\n\n    return result\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc;;;ACAd,+BAA8F;AAE9F,IAAM,eAAN,cAAqD,0CAAoB;AAAA,EACvE,YAAY,OAAU;AACpB,UAAM,EAAE,MAAM,CAAC;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASM,KACJ,IAWA;AAAA,+CAXA;AAAA,MACE,SAAS,CAAC;AAAA,MACV,SAAS,CAAC;AAAA,MACV,OAAO,CAAC;AAAA,MACR,OAAO;AAAA,IACT,GAMA;AACA,YAAM,aAAiC,CAAC;AAExC,aAAO,KAAK,WAAW;AAAA,QACrB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ,SAAS;AACf,qBAAW,KAAK,GAAI,OAA8B;AAAA,QACpD;AAAA,MACF,CAAC,EAAE,KAAK,MAAM,UAAU;AAAA,IAC1B;AAAA;AACF;AAEA,IAAM,qBAAqB,CACzB,UACoB,IAAI,aAAgB,KAAK;AAE/C,IAAO,gBAAQ;;;AD3Cf,IAAAA,4BAAuC;AACvC,wBAAuB;;;AEHvB,WAAsB;AAEtB,IAAI,QAAuB;AAC3B,IAAI,YAA2B;AAE/B,IAAI;AAEF,UAAQ,YAAY,UAAU,OAAO,aAAa;AACpD,SAAS,OAAO;AACd,UAAQ,MAAM,mDAAmD,KAAK;AAGxE;AAEA,IAAI;AAEF,cAAY,YAAY,UAAU,OAAO,iBAAiB;AAC5D,SAAS,OAAO;AACd,UAAQ,MAAM,uDAAuD,KAAK;AAG5E;AAEA,IAAI,SAAc,CAAC;AAEnB,IAAI,SAAS,WAAW;AACtB,WAAS,IAAS,YAAO;AAAA;AAAA,IAEvB;AAAA;AAAA,IAEA;AAAA,EACF,CAAC;AACH;AAGA,IAAO,eAAQ;;;ACnCf,gCAAqB;AAErB,IAAM,SAAS,IAAI,iCAAO;AAE1B,IAAO,cAAQ;AAAA,EACb,WAAW,CAAO,UAAkB;AAClC,QAAI,CAAC,MAAM,YAAY,EAAE,SAAS,OAAO,GAAG;AAC1C,aAAO,KAAK,kIAAmC;AAAA,IACjD;AACA,WAAO,IAAI,KAAK;AAChB,UAAM,WAAW;AACjB,QAAI,OAAO;AACX,QAAI,SAAgB,CAAC;AAErB,WAAO,MAAM;AACX,YAAM,UAAU,OAAO,KAAK;AAC5B,YAAM,aAAa;AAAA,UACf,KAAK;AAAA,gBACC,QAAQ,WAAW,MAAM;AAAA;AAInC,YAAM,OAAO,MAAM,YAAY,KAAK,IAAI,UAAU,EAAE,QAAQ;AAC5D,UAAI,KAAK,WAAW,GAAG;AACrB;AAAA,MACF;AACA,eAAS,OAAO,OAAO,IAAI;AAC3B;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF;;;AHvBA,IAAO,cAAQ;AAAA,EACb,GAAG,iCACE,cAAAC,UADF;AAAA,IAED,OAAO,CAAC,OAAe,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,EAAE,CAAC;AAAA,EACzE;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN,8BAAAC;AAAA,EACA;AACF;","names":["import_byted_apaas_utils","_","exceptions"]}